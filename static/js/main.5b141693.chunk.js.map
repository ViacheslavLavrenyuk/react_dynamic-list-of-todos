{"version":3,"sources":["loadData.ts","Todo.tsx","TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["API_URL","loadData","url","fetch","then","res","json","loadTodos","loadUsers","Todo","todo","user","name","title","completed","TodoList","props","todos","handleSortByName","handleSortByTitle","handleSortByCompleted","className","type","onClick","map","key","id","App","useState","setTodos","isLoading","setIsLoading","isFiltered","setIsFiltered","handleLoadTodos","Promise","all","todosFromApi","usersFromApi","todoWithUser","find","person","userId","length","disabled","sort","a","b","localeCompare","Number","ReactDOM","render","document","getElementById"],"mappings":"6RAGMA,EAAU,wCAEhB,SAASC,EAAYC,GACnB,OAAOC,MAAMD,GACVE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAGd,IAAMC,EAAYN,EAAQ,UAAYD,EAAZ,UACpBQ,EAAYP,EAAQ,UAAYD,EAAZ,UCJpBS,EAAkB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChC,OACE,4BACE,4BAAKA,EAAKC,KAAKC,MACf,4BAAKF,EAAKG,OACV,4BAAKH,EAAKI,UAAY,WAAa,YCA5BC,G,MAAsB,SAACC,GAAW,IAE3CC,EAIED,EAJFC,MACAC,EAGEF,EAHFE,iBACAC,EAEEH,EAFFG,kBACAC,EACEJ,EADFI,sBAGF,OACE,2BAAOC,UAAU,SACf,2BAAOA,UAAU,iBACf,4BACE,4BACE,4BACEC,KAAK,SACLD,UAAU,gBACVE,QAASL,GAHX,SAQF,4BACE,4BACEI,KAAK,SACLD,UAAU,gBACVE,QAASJ,GAHX,SAQF,4BACE,4BACEG,KAAK,SACLD,UAAU,gBACVE,QAASH,GAHX,aAUN,2BAAOC,UAAU,eACdJ,EAAMO,KAAI,SAAAd,GAAI,OACb,kBAAC,EAAD,CACEA,KAAMA,EACNe,IAAKf,EAAKgB,YCyCPC,G,MA5FC,WAAO,IAAD,EACMC,mBAAyB,IAD/B,mBACbX,EADa,KACNY,EADM,OAEcD,oBAAS,GAFvB,mBAEbE,EAFa,KAEFC,EAFE,OAGgBH,oBAAS,GAHzB,mBAGbI,EAHa,KAGDC,EAHC,KAKdC,EAAkB,WACtBH,GAAa,GACbE,GAAc,GAEdE,QAAQC,IAAI,CACV7B,EACAC,IAECJ,MAAK,YAAmC,IAAD,mBAAhCiC,EAAgC,KAAlBC,EAAkB,KAChCC,EAAeF,EAAab,KAAI,SAACd,GACrC,IAAMC,EAAO2B,EAAaE,MACxB,SAACC,GAAD,OAAkB/B,EAAKgC,SAAWD,EAAOf,MAG3C,OAAO,eAAKhB,EAAZ,CAAkBC,YAGpBkB,EAASU,GACTR,GAAa,OAyBnB,OACE,oCACE,qDAEmB,IAAjBd,EAAM0B,OAEF,4BACEtB,UAAU,SACVC,KAAK,SACLC,QAASW,EACTU,SAAUd,GAJZ,aAUA,oCACGE,GACC,4BACEX,UAAU,sBACVC,KAAK,SACLC,QAASW,GAHX,gBAQF,yBAAKb,UAAU,OACb,kBAAC,EAAD,CACEJ,MAAOA,EACPC,iBAlDS,WACvBW,EAAS,YAAIZ,GAAO4B,MAClB,SAACC,EAAGC,GAAJ,OAAUD,EAAEnC,KAAKC,KAAKoC,cAAcD,EAAEpC,KAAKC,UAE7CqB,GAAc,IA+CAd,kBA5CU,WACxBU,EAAS,YAAIZ,GAAO4B,MAClB,SAACC,EAAGC,GAAJ,OAAUD,EAAEjC,MAAMmC,cAAcD,EAAElC,WAEpCoB,GAAc,IAyCAb,sBAtCc,WAC5BS,EAAS,YAAIZ,GAAO4B,MAClB,SAACC,EAAGC,GAAJ,OAAUE,OAAOH,EAAEhC,WAAamC,OAAOF,EAAEjC,eAE3CmB,GAAc,QAwCXH,GACC,uBAAGT,UAAU,gBAAb,iBCxFR6B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.5b141693.chunk.js","sourcesContent":["import { Todo, User } from './types';\n\n\nconst API_URL = 'https://jsonplaceholder.typicode.com/';\n\nfunction loadData<T>(url: string): Promise<T> {\n  return fetch(url)\n    .then(res => res.json());\n}\n\nexport const loadTodos = loadData<Todo[]>(`${API_URL}todos`);\nexport const loadUsers = loadData<User[]>(`${API_URL}users`);\n","import React, { FC } from 'react';\nimport { TodoWithUser } from './types';\n\ninterface Props {\n  todo: TodoWithUser;\n}\n\nexport const Todo: FC<Props> = ({ todo }) => {\n  return (\n    <tr>\n      <td>{todo.user.name}</td>\n      <td>{todo.title}</td>\n      <td>{todo.completed ? 'Complete' : 'Do it!'}</td>\n    </tr>\n  );\n};\n","import React, { FC } from 'react';\nimport { TodoWithUser } from '../types';\nimport { Todo } from '../Todo';\nimport './TodoList.css';\n\ninterface Props {\n  todos: TodoWithUser[];\n  handleSortByName(): void;\n  handleSortByTitle(): void;\n  handleSortByCompleted(): void;\n}\n\nexport const TodoList: FC<Props> = (props) => {\n  const {\n    todos,\n    handleSortByName,\n    handleSortByTitle,\n    handleSortByCompleted,\n  } = props;\n\n  return (\n    <table className=\"table\">\n      <thead className=\"table__header\">\n        <tr>\n          <th>\n            <button\n              type=\"button\"\n              className=\"table__button\"\n              onClick={handleSortByName}\n            >\n              Name\n            </button>\n          </th>\n          <th>\n            <button\n              type=\"button\"\n              className=\"table__button\"\n              onClick={handleSortByTitle}\n            >\n              Todo\n            </button>\n          </th>\n          <th>\n            <button\n              type=\"button\"\n              className=\"table__button\"\n              onClick={handleSortByCompleted}\n            >\n              Status\n            </button>\n          </th>\n        </tr>\n      </thead>\n      <tbody className=\"table__body\">\n        {todos.map(todo => (\n          <Todo\n            todo={todo}\n            key={todo.id}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { FC, useState } from 'react';\nimport { loadTodos, loadUsers } from './loadData';\nimport { TodoWithUser, User, Todo } from './types';\nimport { TodoList } from './TodoList/TodoList';\nimport './App.css';\n\nconst App: FC = () => {\n  const [todos, setTodos] = useState<TodoWithUser[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isFiltered, setIsFiltered] = useState(false);\n\n  const handleLoadTodos = () => {\n    setIsLoading(true);\n    setIsFiltered(false);\n\n    Promise.all([\n      loadTodos,\n      loadUsers,\n    ])\n      .then(([todosFromApi, usersFromApi]) => {\n        const todoWithUser = todosFromApi.map((todo: Todo) => {\n          const user = usersFromApi.find(\n            (person: User) => todo.userId === person.id,\n          ) as User;\n\n          return { ...todo, user };\n        });\n\n        setTodos(todoWithUser);\n        setIsLoading(false);\n      });\n  };\n\n  const handleSortByName = () => {\n    setTodos([...todos].sort(\n      (a, b) => a.user.name.localeCompare(b.user.name),\n    ));\n    setIsFiltered(true);\n  };\n\n  const handleSortByTitle = () => {\n    setTodos([...todos].sort(\n      (a, b) => a.title.localeCompare(b.title),\n    ));\n    setIsFiltered(true);\n  };\n\n  const handleSortByCompleted = () => {\n    setTodos([...todos].sort(\n      (a, b) => Number(a.completed) - Number(b.completed),\n    ));\n    setIsFiltered(true);\n  };\n\n  return (\n    <>\n      <h1>Dynamic list of TODOs</h1>\n      {\n        todos.length === 0\n          ? (\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={handleLoadTodos}\n              disabled={isLoading}\n            >\n              Load Todo\n            </button>\n          )\n          : (\n            <>\n              {isFiltered && (\n                <button\n                  className=\"button reset-filter\"\n                  type=\"button\"\n                  onClick={handleLoadTodos}\n                >\n                  Reset filter\n                </button>\n              )}\n              <div className=\"app\">\n                <TodoList\n                  todos={todos}\n                  handleSortByName={handleSortByName}\n                  handleSortByTitle={handleSortByTitle}\n                  handleSortByCompleted={handleSortByCompleted}\n                />\n              </div>\n            </>\n          )\n      }\n      {isLoading && (\n        <p className=\"loading-text\">Loading...</p>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}