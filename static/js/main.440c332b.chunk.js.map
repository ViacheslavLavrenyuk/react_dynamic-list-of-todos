{"version":3,"sources":["loadData.ts","Todo.tsx","TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["loadData","url","fetch","then","res","json","loadTodos","loadUsers","Todo","currentTodo","user","name","title","completed","TodoList","props","todos","handleSortByName","handleSortByTitle","handleSortByCompleted","className","type","onClick","map","todo","key","id","App","useState","setTodos","isLoading","setIsLoading","isFiltred","setIsFiltred","showTodos","Promise","all","todoWithUser","find","person","userId","length","disabled","sort","a","b","localeCompare","Number","ReactDOM","render","document","getElementById"],"mappings":"6RAMA,SAASA,EAAYC,GACnB,OAAOC,MAAMD,GACVE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAGd,IAAMC,EAAYN,EARR,8CASJO,EAAYP,EARR,8CCGJQ,EAAkB,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAChC,OACE,4BACE,4BAAKA,EAAYC,KAAKC,MACtB,4BAAKF,EAAYG,OACjB,4BAAKH,EAAYI,UAAY,WAAa,YCAnCC,G,MAAsB,SAACC,GAAW,IAE3CC,EAIED,EAJFC,MACAC,EAGEF,EAHFE,iBACAC,EAEEH,EAFFG,kBACAC,EACEJ,EADFI,sBAGF,OACE,2BAAOC,UAAU,SACf,2BAAOA,UAAU,iBACf,4BACE,4BACE,4BACEC,KAAK,SACLD,UAAU,gBACVE,QAASL,GAHX,SAQF,4BACE,4BACEI,KAAK,SACLD,UAAU,gBACVE,QAASJ,GAHX,SAQF,4BACE,4BACEG,KAAK,SACLD,UAAU,gBACVE,QAASH,GAHX,aAUN,2BAAOC,UAAU,eACdJ,EAAMO,KAAI,SAAAC,GAAI,OACb,kBAAC,EAAD,CACEf,YAAae,EACbC,IAAKD,EAAKE,YCgDPC,G,MAnGK,WAAO,IAAD,EACEC,mBAAyB,IAD3B,mBACjBZ,EADiB,KACVa,EADU,OAEUD,oBAAkB,GAF5B,mBAEjBE,EAFiB,KAENC,EAFM,OAGUH,oBAAkB,GAH5B,mBAGjBI,EAHiB,KAGNC,EAHM,KAKlBC,EAAY,WAChBH,GAAa,GACbE,GAAa,GACbE,QAAQC,IAAI,CACV9B,EACAC,IAECJ,MAAK,SAAAC,GACJ,IAAMiC,EAAejC,EAAI,GAAGmB,KAAI,SAACC,GAC/B,IAAMd,EAAON,EAAI,GAAGkC,MAClB,SAACC,GAAD,OAAkBf,EAAKgB,SAAWD,EAAOb,MAG3C,OAAO,eAAKF,EAAZ,CAAkBd,YAGpBmB,EAASQ,GACTN,GAAa,OAyBnB,OACE,oCACE,qDAEmB,IAAjBf,EAAMyB,OAEF,4BACErB,UAAU,SACVC,KAAK,SACLC,QAASY,EACTQ,SAAUZ,GAJZ,aAUA,oCAEIE,EAEI,4BACEZ,UAAU,sBACVC,KAAK,SACLC,QAASY,GAHX,gBAQA,KAEN,yBAAKd,UAAU,OACb,kBAAC,EAAD,CACEJ,MAAOA,EACPC,iBAtDS,WACvBY,EAAS,YAAIb,GAAO2B,MAClB,SAACC,EAAGC,GAAJ,OAAUD,EAAElC,KAAKC,KAAKmC,cAAcD,EAAEnC,KAAKC,UAE7CsB,GAAa,IAmDCf,kBAhDU,WACxBW,EAAS,YAAIb,GAAO2B,MAClB,SAACC,EAAGC,GAAJ,OAAUD,EAAEhC,MAAMkC,cAAcD,EAAEjC,WAEpCqB,GAAa,IA6CCd,sBA1Cc,WAC5BU,EAAS,YAAIb,GAAO2B,MAClB,SAACC,EAAGC,GAAJ,OAAUE,OAAOH,EAAE/B,WAAakC,OAAOF,EAAEhC,eAE3CoB,GAAa,QA6CTH,EAEI,uBAAGV,UAAU,gBAAb,cAEA,QC/FZ4B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.440c332b.chunk.js","sourcesContent":["import { Todo, User } from './types';\n\n\nconst todosUrl = 'https://jsonplaceholder.typicode.com/todos';\nconst usersUrl = 'https://jsonplaceholder.typicode.com/users';\n\nfunction loadData<T>(url: string): Promise<T> {\n  return fetch(url)\n    .then(res => res.json());\n}\n\nexport const loadTodos = loadData<Todo[]>(todosUrl);\nexport const loadUsers = loadData<User[]>(usersUrl);\n","import React, { FC } from 'react';\nimport { TodoWithUser } from './types';\n\ninterface Props {\n  currentTodo: TodoWithUser;\n}\n\nexport const Todo: FC<Props> = ({ currentTodo }) => {\n  return (\n    <tr>\n      <td>{currentTodo.user.name}</td>\n      <td>{currentTodo.title}</td>\n      <td>{currentTodo.completed ? 'Complete' : 'Do it!'}</td>\n    </tr>\n  );\n};\n","import React, { FC } from 'react';\nimport { TodoWithUser } from '../types';\nimport { Todo } from '../Todo';\nimport './TodoList.css';\n\ninterface Props {\n  todos: TodoWithUser[];\n  handleSortByName(): void;\n  handleSortByTitle(): void;\n  handleSortByCompleted(): void;\n}\n\nexport const TodoList: FC<Props> = (props) => {\n  const {\n    todos,\n    handleSortByName,\n    handleSortByTitle,\n    handleSortByCompleted,\n  } = props;\n\n  return (\n    <table className=\"table\">\n      <thead className=\"table__header\">\n        <tr>\n          <th>\n            <button\n              type=\"button\"\n              className=\"table__button\"\n              onClick={handleSortByName}\n            >\n              Name\n            </button>\n          </th>\n          <th>\n            <button\n              type=\"button\"\n              className=\"table__button\"\n              onClick={handleSortByTitle}\n            >\n              Todo\n            </button>\n          </th>\n          <th>\n            <button\n              type=\"button\"\n              className=\"table__button\"\n              onClick={handleSortByCompleted}\n            >\n              Status\n            </button>\n          </th>\n        </tr>\n      </thead>\n      <tbody className=\"table__body\">\n        {todos.map(todo => (\n          <Todo\n            currentTodo={todo}\n            key={todo.id}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { FC, useState } from 'react';\nimport { loadTodos, loadUsers } from './loadData';\nimport { TodoWithUser, User, Todo } from './types';\nimport { TodoList } from './TodoList/TodoList';\nimport './App.css';\n\nconst App: FC<{}> = () => {\n  const [todos, setTodos] = useState<TodoWithUser[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [isFiltred, setIsFiltred] = useState<boolean>(false);\n\n  const showTodos = () => {\n    setIsLoading(true);\n    setIsFiltred(false);\n    Promise.all([\n      loadTodos,\n      loadUsers,\n    ])\n      .then(res => {\n        const todoWithUser = res[0].map((todo: Todo) => {\n          const user = res[1].find(\n            (person: User) => todo.userId === person.id,\n          ) as User;\n\n          return { ...todo, user };\n        });\n\n        setTodos(todoWithUser);\n        setIsLoading(false);\n      });\n  };\n\n  const handleSortByName = () => {\n    setTodos([...todos].sort(\n      (a, b) => a.user.name.localeCompare(b.user.name),\n    ));\n    setIsFiltred(true);\n  };\n\n  const handleSortByTitle = () => {\n    setTodos([...todos].sort(\n      (a, b) => a.title.localeCompare(b.title),\n    ));\n    setIsFiltred(true);\n  };\n\n  const handleSortByCompleted = () => {\n    setTodos([...todos].sort(\n      (a, b) => Number(a.completed) - Number(b.completed),\n    ));\n    setIsFiltred(true);\n  };\n\n  return (\n    <>\n      <h1>Dynamic list of TODOs</h1>\n      {\n        todos.length === 0\n          ? (\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={showTodos}\n              disabled={isLoading}\n            >\n              Load Todo\n            </button>\n          )\n          : (\n            <>\n              {\n                isFiltred\n                  ? (\n                    <button\n                      className=\"button reset-filter\"\n                      type=\"button\"\n                      onClick={showTodos}\n                    >\n                      Reset filter\n                    </button>\n                  )\n                  : null\n              }\n              <div className=\"app\">\n                <TodoList\n                  todos={todos}\n                  handleSortByName={handleSortByName}\n                  handleSortByTitle={handleSortByTitle}\n                  handleSortByCompleted={handleSortByCompleted}\n                />\n              </div>\n            </>\n          )\n      }\n      {\n        isLoading\n          ? (\n            <p className=\"loading-text\">Loading...</p>\n          )\n          : null\n      }\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}